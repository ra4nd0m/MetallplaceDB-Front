name: Build an app

on:
  push:
    branches: [main,actions]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create .env file
        run: |
          echo VITE_API_URL=${{ secrets.VITE_API_URL}} >> .env
          echo VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN}} >> .env
      - name: Install and Build
        run: |
          npm install --legacy-peer-deps
          npm run build 
      - name: Make an archive
        run: |
          zip -r ./dist.zip dist/*
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
            name: MPL-Front
            path: ./dist.zip
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})-$(echo ${GITHUB_SHA})"
        id: extract_branch
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{steps.extract_branch.outputs.branch  }}
            release_name: Release ${{ steps.extract_branch.outputs.branch  }}
            draft: false
            prerelease: false
      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
